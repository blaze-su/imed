'use strict';var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k];}});}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,'default',{enumerable:true,value:v});}:function(o,v){o['default']=v;});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!=='default'&&Object.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result;};Object.defineProperty(exports,'__esModule',{value:true});exports.Event=void 0;const mongoose=__importStar(require('mongoose'));const eventSchema=new mongoose.Schema({photo:{type:String},title:{type:String,required:true},date:{type:String,required:true},text:{type:String,required:true},place:{type:String,required:true},time:{type:String,required:true},cost:{type:String,required:true},doctorsId:{type:mongoose.Schema.Types.ObjectId,ref:'Doctor'},tablesId:{type:[mongoose.Schema.Types.ObjectId],ref:'Table'},describesId:{type:[mongoose.Schema.Types.ObjectId],ref:'Describe'}});exports.Event=mongoose.model('Event',eventSchema);