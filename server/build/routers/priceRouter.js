'use strict';var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];result['default']=mod;return result;};Object.defineProperty(exports,'__esModule',{value:true});const express_1=require('express');const bodyParser=__importStar(require('body-parser'));const _models_1=require('../models');const priceRouter=express_1.Router();exports.priceRouter=priceRouter;priceRouter.use(bodyParser.json());priceRouter.route('/prices/').get((req,res,next)=>{_models_1.Price.find({}).populate({path:'marksId',model:'mark'}).then(price=>{res.json(price);},err=>next(err)).catch(err=>next(err));});priceRouter.route('/prices/:priceId').get((req,res,next)=>{_models_1.Price.findById(req.params.priceId).populate([{path:'marksId',model:'mark'},{path:'categoriesId',model:'category',populate:[{path:'equipmentsId',model:'equipment'},{path:'informationsId',model:'information'},{path:'doctorsId',model:'doctor',populate:[{path:'marksId',model:'mark'},{path:'specializationsId',model:'specialization'}]}]}]).then(price=>{res.json(price);},err=>next(err)).catch(err=>next(err));});