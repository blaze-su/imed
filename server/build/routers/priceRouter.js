'use strict';var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];result['default']=mod;return result;};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});const express_1=require('express');const bodyParser=__importStar(require('body-parser'));const _models_1=require('../models');const exceljs_1=__importDefault(require('exceljs'));const path_1=__importDefault(require('path'));const priceRouter=express_1.Router();exports.priceRouter=priceRouter;priceRouter.use(bodyParser.json());priceRouter.route('/prices/').get((req,res,next)=>{_models_1.Price.find({}).then(price=>{res.json(price);},err=>next(err)).catch(err=>next(err));});priceRouter.route('/prices/upload').get((req,res,next)=>{_models_1.Price.deleteMany({},()=>{console.log('clear databese');});const excelPath=path_1.default.join(__dirname,'../../price.xlsx');var workbook=new exceljs_1.default.Workbook();workbook.xlsx.readFile(excelPath).then(function(){workbook.eachSheet((worksheet,sheetId)=>{const servicesId=worksheet.name;let prices=Array();console.log('servicesId',servicesId);worksheet.eachRow({includeEmpty:true},(row,rowNumber)=>{prices.push({title:String(row.getCell(1).value),cost:'1000',servicesId:servicesId});});_models_1.Price.insertMany(prices).then(docs=>{console.log('price add to databse count = ',prices.length);}).catch(err=>{next(err);});});res.send('price add to databse....');});console.log(__dirname);});priceRouter.route('/prices/:priceId').get((req,res,next)=>{_models_1.Price.findById(req.params.priceId).then();});