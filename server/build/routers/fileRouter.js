'use strict';var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];result['default']=mod;return result;};Object.defineProperty(exports,'__esModule',{value:true});const express_1=require('express');const path_1=__importDefault(require('path'));const md5_1=__importDefault(require('md5'));const sharp_1=__importDefault(require('sharp'));const bodyParser=__importStar(require('body-parser'));const _models_1=require('../models');const multer=require('multer');const mongoose_1=require('mongoose');const PUBLIC_DIR=process.env.PUBLIC_DIR||'public';const UPLOAD_DIR=process.env.UPLOAD_DIR||'uploads';const MAX_WIDTH=1600;const MAX_HEIGT=1200;const fileRouter=express_1.Router();exports.fileRouter=fileRouter;fileRouter.use(bodyParser.json());const storage=multer.memoryStorage();const upload=multer({storage});const fileSaveInfo=(pSrc,pTitle,pType,res,next)=>{_models_1.File.create({src:pSrc,title:pTitle,type:pType}).then(file=>{console.log('File rigistr in MongoDb');res.json(file);},err=>next(err)).catch(err=>next(err));};const dirPath=path_1.default.join(PUBLIC_DIR,UPLOAD_DIR);fileRouter.route('/files/').get((req,res,next)=>{_models_1.File.find({}).then(files=>{res.json(files);},err=>next(err)).catch(err=>next(err));}).post(upload.single('file'),(req,res,next)=>{if(req.file===undefined){res.send('Error: the file was not downloaded!');return;}const {buffer,mimetype,originalname}=req.file;const hash=md5_1.default(buffer);const ext=path_1.default.parse(originalname).ext;if(['image/jpeg','image/png'].find(m=>m===mimetype)){const jpgPath=path_1.default.join(dirPath,hash+'.jpg');const webpPath=path_1.default.join(dirPath,hash+'.webp');const image=sharp_1.default(buffer);image.metadata().then(metadata=>{const {width,height}=metadata;if(width!==undefined&&height!==undefined){const dWidth=width-MAX_WIDTH;const dHeight=height-MAX_HEIGT;if(dWidth>0||dHeight>0){return image.resize(dWidth>dHeight?{width:MAX_WIDTH}:{height:MAX_HEIGT}).jpeg().toBuffer();}else{return image.toBuffer();}}else{throw new mongoose_1.Error('Error: get metadata!');}}).then(imageBuffer=>{if(!buffer){throw new mongoose_1.Error('Error: optimization file!');}const jpgImage=sharp_1.default(imageBuffer);jpgImage.toFile(jpgPath).then(info=>{console.log('jpgImage',jpgImage);fileSaveInfo(hash+'.jpg','','image/jpeg',res,next);});}).catch(err=>{next(err);});}else if(['application/pdf','application/vnd.openxmlformats-officedocument.wordprocessingml.document'].find(m=>m===mimetype)){console.log('application/pdf');}else{res.send('Error: the file type was not support!');return;}});