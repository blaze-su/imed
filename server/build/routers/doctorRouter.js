'use strict';var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];result['default']=mod;return result;};Object.defineProperty(exports,'__esModule',{value:true});const express_1=require('express');const bodyParser=__importStar(require('body-parser'));const _models_1=require('../models');const doctorRouter=express_1.Router();exports.doctorRouter=doctorRouter;doctorRouter.use(bodyParser.json());doctorRouter.route('/doctors/').get((req,res,next)=>{_models_1.Doctor.find({}).populate([{path:'marksId',model:_models_1.Mark},{path:'specializationsId',model:_models_1.Specialization},{path:'filesId',model:_models_1.File}]).then(doctor=>{res.json(doctor);},err=>next(err)).catch(err=>next(err));});doctorRouter.route('/doctors/:doctorId').get((req,res,next)=>{_models_1.Doctor.findById(req.params.doctorId).populate([{path:'marksId',model:_models_1.Mark},{path:'specializationsId',model:_models_1.Specialization},{path:'filesId',model:_models_1.File}]).then(doctor=>{res.json(doctor);},err=>next(err)).catch(err=>next(err));});