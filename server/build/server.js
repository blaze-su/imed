'use strict';var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k];}});}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,'default',{enumerable:true,value:v});}:function(o,v){o['default']=v;});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!=='default'&&Object.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result;};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});const express_1=__importDefault(require('express'));const mongoose_1=__importDefault(require('mongoose'));const keys_1=require('./keys');const cors_1=__importDefault(require('cors'));const routers=__importStar(require('./routers'));const app=express_1.default();console.log('MONGODB_URL',keys_1.MONGODB_URL);const connect=mongoose_1.default.connect(keys_1.MONGODB_URL,{useNewUrlParser:true,useUnifiedTopology:true,useCreateIndex:true});connect.then(()=>{console.log('MongoDb is connected...');},err=>{console.log(err);});app.use(cors_1.default());app.use('/static',express_1.default.static('public/uploads'));app.get('/',(req,res,next)=>{res.send('Tour Booking API');});app.use(Object.values(routers));app.listen(keys_1.PORT,()=>{console.log(`Server started on: ${keys_1.HOST}:${keys_1.PORT}`);});